[Global]
FallbackTheme=_fallback

[Common]
# Sets the default "units" for the window.  If the window aspect is different
# from the theme aspect, one of these two numbers is scaled up to match.
ScreenHeight=1080

InitialScreen=CustomBranch.InitialScreen()
AutoSetStyle=false
ImageCache="Banner,Background,Jacket,Disc"
StepsTypesToHide="dance-threepanel,lights-cabinet"

[ScreenWithMenuElements]
ShowHeader=true
HeaderX=
HeaderY=
FooterX=
FooterY=
ShowFooter=false
ShowHelp=false
HelpX=_screen.cx
HelpY=SCREEN_BOTTOM-50
HelpOnCommand=draworder,200;zoomy,0;sleep,0.2;linear,0.1;zoomy,1
HelpOffCommand=linear,0.1;zoomy,0

FooterText="analyzing"
StopMusicOnBack=true

TimerMetricsGroup="MenuTimer"
TimerX=SCREEN_RIGHT-200
TimerY=SCREEN_TOP+100
TimerOnCommand=draworder,2;zoom,0;linear,0.25;zoom,0.75
TimerOffCommand=linear,0.25;zoom,0;
TimerStealth=false

[ScreenWithMenuElementsBlank]
Class="ScreenWithMenuElements"
Fallback="ScreenWithMenuElements"

# This is meant to show titles for menu screens, which we don't want in some
# places (such as the attract loop).
ShowHeader=false
WaitForChildrenBeforeTweeningOut=false

[MenuTimer]
WarningStart=10
WarningBeepStart=10
MaxStallSeconds=30
#
HurryUpTransition=20

Text1OnCommand=stopeffect;stoptweening;xy,-24,24;zoom,0.6;diffusealpha,0.9;blend,Blend.Add;linear,0.25;sleep,0.75;queuecommand,"On"
Text1FormatFunction=function(fSeconds) fSeconds=math.min( 99, math.ceil(fSeconds) ); local digit = math.floor(fSeconds/10); return ""..digit end

Text2OnCommand=stopeffect;stoptweening;xy,24,24;zoom,0.6;diffusealpha,0.9;blend,Blend.Add;linear,0.25;sleep,0.75;queuecommand,"On"
Text2FormatFunction=function(fSeconds) fSeconds=math.min( 99, math.ceil(fSeconds) ); local digit = math.mod(fSeconds,10); return ""..digit end

FrameX=11
FrameY=25
FrameOnCommand=
#
Warning10Command=diffuseshift;effectperiod,1;effectcolor1,Color.White;effectcolor2,Color.Red;
Warning9Command=diffuseshift;effectperiod,1;effectcolor1,Color.White;effectcolor2,Color.Red;
Warning8Command=diffuseshift;effectperiod,1;effectcolor1,Color.White;effectcolor2,Color.Red;
Warning7Command=diffuseshift;effectperiod,1;effectcolor1,Color.White;effectcolor2,Color.Red;
Warning6Command=diffuseshift;effectperiod,1;effectcolor1,Color.White;effectcolor2,Color.Red;
Warning5Command=diffuseshift;effectperiod,0.2;effectcolor1,Color.White;effectcolor2,Color.Red;
Warning4Command=diffuseshift;effectperiod,0.2;effectcolor1,Color.White;effectcolor2,Color.Red;
Warning3Command=diffuseshift;effectperiod,0.2;effectcolor1,Color.White;effectcolor2,Color.Red;
Warning2Command=diffuseshift;effectperiod,0.2;effectcolor1,Color.White;effectcolor2,Color.Red;
Warning1Command=diffuseshift;effectperiod,0.2;effectcolor1,Color.White;effectcolor2,Color.Red;
Warning0Command=diffuseshift;effectperiod,0.2;effectcolor1,Color.White;effectcolor2,Color.Red;

[MenuTimerNoSound]
Fallback="MenuTimer"
HurryUpTransition=0
WarningBeepStart=0
FrameOnCommand=visible,false

###Screens
[ScreenTitle]
Fallback="ScreenWithMenuElements"

[ScreenSelectMode]
Fallback="ScreenTitleMenu"
ShowHeader=true
HeaderText="mainmenu"
ShowFooter=true
FooterText="welcome"
TimerOnCommand=visible,false

ForceTimer=false
# Override _fallback, which sends us back to ScreenInit
PrevScreen=CustomBranch.InitialScreen()
NextScreen=CustomBranch.InitialScreen()

ChoiceNames="Options,Edit,GameStart,Customize,Exit"
DefaultChoice="GameStart"

ChoiceGameStart="applydefaultoptions;text,Music Play;playmode,regular;screen,"..Branch.StartGame()
ChoiceOptions="screen,ScreenOptionsService;text,OPTIONS"
ChoiceEdit="text,Edit;screen,"..Branch.OptionsEdit()
ChoiceCustomize="text,Customize;screen,ScreenPHOTwON"
ChoiceExit="screen,ScreenExit;text,EXIT"

ShowScroller=true
WrapScroller=false
LoopScroller=false
ScrollerX=_screen.cx+260
ScrollerY=_screen.cy-40
ScrollerSecondsPerItem=0.2
ScrollerSubdivisions=1
ScrollerTransform=function(self,ofs,i,n) \
	self:x(math.abs(96*(ofs))); \
	self:y(92*(ofs)); \
end

ShowIcon=false

[ScreenSelectProfile]
WaitForChildrenBeforeTweening=true
Fallback="ScreenWithMenuElements"
Class="ScreenSelectProfile"
HeaderText="login"
#
NextScreen="ScreenSelectStyle"
PrevScreen=CustomBranch.InitialScreen()
ScreenOnCommand=%function(self) self:lockinput(3); end;
#
ShowHeader=true
ShowFooter=true
FooterText="accessdata"
TimerOnCommand=visible,false
#
CodeNames=SelectProfileKeys()
CodeUp="+Left"
CodeUp2="+MenuLeft"
CodeUp3="+Up"
CodeUp4="+MenuUp"
CodeDown="+Right"
CodeDown2="+MenuRight"
CodeDown3="+Down"
CodeDown4="+MenuDown"
# Holding Start let us skip ( annoying )
CodeStart="Start"
CodeBack="Back"
CodeCenter="Center"
CodeDownLeft="DownLeft"
CodeDownRight="DownRight"

ScreenOutDelay=0
ShowHelp=false
StopMusicOnBack=true

[ScreenSelectStyle]
Class="ScreenSelectMaster"
Fallback="ScreenSelectMaster"
PrevScreen=CustomBranch.InitialScreen()
ShowFooter=true
HeaderText="selstyle"
ShowHelp=true
HelpY=SCREEN_BOTTOM-150

ChoiceNames="Single,Versus,Double"
DefaultChoice="Single"

Choice1="style,single;playmode,regular;name,Single;screen,ScreenProfileLoad"
Choice2="style,versus;playmode,regular;name,Versus;screen,ScreenProfileLoad"
Choice3="style,double;playmode,regular;name,Double;screen,ScreenProfileLoad"

ShowScroller=true
# Scroller should behave circularly - both selection and animation should
# wrap around.
WrapScroller=true
LoopScroller=true
WrapCursor=true
ShowIcon=true
UseIconMetrics=true

ScrollerX=_screen.cx
ScrollerY=_screen.cy-40
ScrollerOnCommand=fov,60;draworder,-1
ScrollerNumItemsToDraw=3

# NOTE: You have to set SecondsPerItem > 0 or it won't animate
ScrollerSecondsPerItem=0.25
ScrollerSubdivisions=5
# XXX FIXME This is nicked from futurex, and it's ugly and stuff
# Also get new graphics for Emi/Disco/Yuni/Rinon, with good edges,
# maybe original characters, and same perspective angle on the stage
# XXX Idea: maybe have single zoom to background and other two zoom to
# foreground when 2P joins, then switch between them?  More complicated though.
ScrollerTransform=function(self,ofs,i,n) \
	local t=ofs*math.pi*2/n; \
	if IsUsingWideScreen() then \
		self:x(math.sin(t)*720); \
	else \
		self:x(math.sin(t)*640); \
	end \
	self:y(math.cos(t)*150-150); \
	self:z((math.cos(t)*200-200)); \
end

IconChoiceSingleX=
IconChoiceSingleY=
IconChoiceSingleOnCommand=draworder,2
IconChoiceSingleOffCommand=

IconChoiceDoubleX=
IconChoiceDoubleY=
IconChoiceDoubleOnCommand=draworder,2
IconChoiceDoubleOffCommand=

IconChoiceVersusX=
IconChoiceVersusY=
IconChoiceVersusOnCommand=draworder,2
IconChoiceVersusOffCommand=

[ScreenProfileLoad]
Fallback="ScreenSelectProfile"
NextScreen="ScreenCaution"
ShowHeader=false
ShowFooter=false
PlayMusic=true
CodeNames="Start"
CodeStart="Start"

[ScreenCaution]
Class="ScreenSplash"
Fallback="ScreenSplash"
NextScreen="OFSelectMusic"
PrevScreen=CustomBranch.InitialScreen()
AllowStartToSkip=true

ForceTimer=true
TimerStealth=true
TimerSeconds=3.5
TimerOnCommand=draworder,6;visible,false

[OFSelectMusic]
# If a person presses back, Go to ScreenTitleMenu.
PrevScreen="ScreenTitleMenu"
# The class we use for the screen,
# We want an empty screen cuz the wheel is all lua.
Class="ScreenWithMenuElements"
# Fallback to said empty screen.
Fallback="ScreenWithMenuElements"
HeaderText="selmusic"

# We dont want to handel the back button, Cuz we do this in lua.
HandleBackButton=false

###Extra Screens###
[ScreenPHOTwON]
Class="ScreenSelectMaster"
Fallback="ScreenSelectMaster"
PrevScreen=Branch.FirstScreen()
NextScreen=Branch.FirstScreen()
HandleBackButton=false
SharedSelection=true
HeaderText="Customize"

StopMusicOnBack=true

ChoiceNames="1,2,3,4"
Choice1="name,TopLeft;"
Choice2="name,TopRight;"
Choice3="name,BotLeft;"
Choice4="name,BotRight;"
DefaultChoice="1"

OptionOrderUp="1:3,3:1,2:4,4:2"
OptionOrderDown="1:3,3:1,2:4,4:2"
OptionOrderLeft="1:2,2:1,3:4,4:3"
OptionOrderRight="1:2,2:1,3:4,4:3"
# needed for detecting start input
CodeNames="Start,Back"
#ToggleEditMode
CodeStart="~Start"
CodeBack="~Back"
#CodeToggleEditMode="Up,Up,Down,Down,Left,Right,Left,Right,Select,Select,Select"


